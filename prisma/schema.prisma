generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model DiscordServer {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  discordServerId String   @unique
  welcomeMessage  String?
  goodbyeMessage  String?
  banMessage      String?
  dateCreated     DateTime @default(now())
  dateUpdated     DateTime @updatedAt
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  discordId     String       @unique
  name          String
  email         String?      @unique
  password      String?
  role          String       @default("user")
  dateOfBirth   DateTime?
  dateCreated   DateTime     @default(now())
  dateUpdated   DateTime     @updatedAt
  teamLeagueIDs String[]     @db.ObjectId
  TeamsLeague   TeamLeague[] @relation(fields: [teamLeagueIDs], references: [id])
}

enum Side {
  BLUE
  RED
}

model TeamLeague {
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  side                Side
  playerIDs           String[]           @db.ObjectId
  players             User[]             @relation(fields: [playerIDs], references: [id])
  customLeagueMatchId String?            @db.ObjectId
  CustomLeagueMatch   CustomLeagueMatch? @relation(fields: [customLeagueMatchId], references: [id])
}

model CustomLeagueMatch {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  teamBlueId      String       @db.ObjectId
  teamRedId       String       @db.ObjectId
  winnerId        String?      @db.ObjectId
  ServerDiscordId String
  Teams           TeamLeague[]
  dateCreated     DateTime     @default(now())
  dateUpdated     DateTime     @updatedAt
}

// modelo para o servidor no discord e sua configurações, como mensagem de boas vidas, mensagem de saída, de banimento, etc
